------------------------------------------------------------------------
--  criba_eratostenes.adac
------------------------------------------------------------------------
procedure eratostenes is

integer n;
boolean criba[101];

------------------------------------------------------------------------
function integer pedir_entero () is

integer n;
------------------------------------------------------------------------
begin
        n := 0;
        while (n < 1) or (n > 100) do
                put("Dame un numero entre 1 y 100: ");
                get (n);
        end
        return n;
end

------------------------------------------------------------------------
procedure escrib_vect (val boolean v[101]) is

integer i, m,h;
boolean salir;
------------------------------------------------------------------------
begin

        h:=0;
        put_line("");
        while h <= n do
                if(v[h]) then
                        put_line("Dentro de escribir antes de escribir, " , h , " es primo");
                else
                        put_line("Dentro de escribir antes de escribir, " , h , " NO es primo");
                end
                h:=h+1;

        end
    i := 2;
    m := 0;
    salir := false;
    put_line ("");
    put_line ("Numeros primos hasta ", n, ": ");
    put_line ("");
    while not salir do
        if i > n
        then
            salir := true;
        else
            if v[i] then
                put_line (i, " es primo.");
                m := m + 1;
            end
            i := i + 1;
        end
    end
    put_line ("");
    put_line ("Hasta ", n, " hay ", m, " números primos.");
end

----------------------------------------------------------------
procedure inicializar (ref boolean v[101]) is

integer i;
----------------------------------------------------------------
begin
        i := 1;
        while i <= n do
                v[i] := true;
                i := i + 1;
        end
end

----------------------------------------------------------------
procedure eliminar_no_primos (ref boolean v[101]) is

integer i, j , h;
----------------------------------------------------------------
begin
        h:=0;
        put_line("");
        while h <= n do
                if(v[h]) then
                        put_line("Dentro de eliminar pero antes de eliminarlos, " , h , " es primo");
                else
                        put_line("Dentro de eliminar pero antes de eliminarlos, " , h , " NO es primo");
                end
                h:=h+1;

        end
        put_line("");
        i := 2;
        while i <= n div 2 do
                put_line("i es ",i);
                if v[i] then
                        j := 2 * i;
                        put_line("j es ",j);
                        while j <= n do
                                v[j] := false;
                                put_line("Se pone a false el num ",j);
                                j := j + i;
                        end
                end
                i := i + 1;
        end

        put_line("");
        h:=0;
        while h <= n do
                if(v[h]) then
                        put_line("Dentro de eliminar pero despues de eliminarlos, " , h , " es primo");
                else
                        put_line("Dentro de eliminar pero despues de eliminarlos, " , h , " NO es primo");
                end
                h:=h+1;

        end
end
----------------------------------------------------------------

------------------------------------------------------------------------
procedure procesar (ref boolean v[101]) is
------------------------------------------------------------------------
integer h;
begin
        h:=0;
        inicializar (v);
        put_line("");
        while h <= n do
                if(v[h]) then
                        put_line("Antes de eliminar, " , h , " es primo");
                else 
                         put_line("Antes de eliminar, " , h , " NO es primo");
                end
                h:=h+1;

        end
        put_line("");
        eliminar_no_primos (v);
        h:=0;
        put_line("");
        while h <= n do
                if(v[h]) then
                        put_line("Despues de llamar a eliminar, " , h , " es primo");
                else 
                         put_line("Despues de llamar a eliminar, " , h , " NO es primo");
                end
                h:=h+1;

        end
        put_line("");
        escrib_vect (v);
end

------------------------------------------------------------------------
begin
        put_line ("Criba de Eratóstenes: determinación de qué números son primos hasta un n dado.");
        put_line ("https://es.wikipedia.org/wiki/Criba_de_Erat%C3%B3stenes");
        put_line();

        n := pedir_entero ();
        procesar (criba);
end
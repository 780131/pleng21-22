<goldbach>
  ENP L0
<hay_un_par>
<es_primo>
<pedir_entero>
L1:
  JMP L2
L2:
; --Comprobar variable n
  SRF  0  3
  STC  0
  ASG
L3:
; --Comprobar variable n
  SRF  0  3
  DRF
  STC  2
  LTE
; --Comprobar variable n
  SRF  0  3
  DRF
  STC  2
  MOD
  STC  0
  NEQ
  OR
  JMF L4
<String_"Dame un numero PAR mayor que 2: ">
  STC 32
  STC 58
  STC 50
  STC 32
  STC 101
  STC 117
  STC 113
  STC 32
  STC 114
  STC 111
  STC 121
  STC 97
  STC 109
  STC 32
  STC 82
  STC 65
  STC 80
  STC 32
  STC 111
  STC 114
  STC 101
  STC 109
  STC 117
  STC 110
  STC 32
  STC 110
  STC 117
  STC 32
  STC 101
  STC 109
  STC 97
  STC 68
</String_"Dame un numero PAR mayor que 2: ">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
; --Comprobar variable n
  SRF  0  3
  RD  1
  JMP L3
L4:
; --Comprobar variable n
  SRF  0  3
  DRF
; --Se hace return 
  CSF
  CSF
</pedir_entero>
L5:
; --Se anyade el parametro en el for este y es valor y no array k
  SRF  0  3
  ASGI
  JMP L6
L6:
; --Comprobar variable i
  SRF  0  4
  STC  2
  ASG
; --Comprobar variable primo
  SRF  0  5
  STC  0
  ASG
L7:
; --Comprobar variable i
  SRF  0  4
  DRF
; --Comprobar variable k
  SRF  0  3
  DRF
  STC  2
  DIV
  LTE
; --Comprobar variable primo
  SRF  0  5
  DRF
  AND
  JMF L8
; --Comprobar variable primo
  SRF  0  5
; --Comprobar variable k
  SRF  0  3
  DRF
; --Comprobar variable i
  SRF  0  4
  DRF
  MOD
  STC  0
  NEQ
  ASG
; --Comprobar variable i
  SRF  0  4
; --Comprobar variable i
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
  JMP L7
L8:
; --Comprobar variable primo
  SRF  0  5
  DRF
; --Se hace return 
  CSF
  CSF
</es_primo>
<Putline>
<if_else>
<then>
<if_else>
<then>
<Putline>
<Putline>
L9:
; --Se anyade el parametro en el for este y es valor y no array k
  SRF  0  3
  ASGI
  JMP L10
L10:
; --Comprobar variable a
  SRF  0  6
  STC  2
  ASG
; --Comprobar variable b
  SRF  0  7
  STC  2
  ASG
; --Comprobar variable n
  SRF  0  5
  STC  0
  ASG
; --Comprobar variable k
  SRF  0  3
  DRF
; --Se va a anyadir el string del putline y se muestra k
  WRT  1
<String_" es la suma de: ">
; --Comprobar variable k
  SRF  0  3
  DRF
  STC 32
  STC 58
  STC 101
  STC 100
  STC 32
  STC 97
  STC 109
  STC 117
  STC 115
  STC 32
  STC 97
  STC 108
  STC 32
  STC 115
  STC 101
  STC 32
</String_" es la suma de: ">
; --Se va a anyadir el string del putline y se muestra k
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
L11:
; --Comprobar variable a
  SRF  0  6
  DRF
; --Comprobar variable k
  SRF  0  3
  DRF
  LT
; --Comprobar variable b
  SRF  0  7
  DRF
; --Comprobar variable k
  SRF  0  3
  DRF
  LT
  AND
  JMF L12
  STC 10
  WRT  0
<String_"Antes de evaluar el if">
  STC 102
  STC 105
  STC 32
  STC 108
  STC 101
  STC 32
  STC 114
  STC 97
  STC 117
  STC 108
  STC 97
  STC 118
  STC 101
  STC 32
  STC 101
  STC 100
  STC 32
  STC 115
  STC 101
  STC 116
  STC 110
  STC 65
</String_"Antes de evaluar el if">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
; --Comprobar variable a
; --Se anyade el parametro y es NONE
  SRF  0  6
  DRF
; --Se anyade el parametro !!!!!a
; --Se llama a la funcion es_primo
  OSF  8  1 L5
; --Comprobar variable b
; --Se anyade el parametro y es NONE
  SRF  0  7
  DRF
; --Se anyade el parametro !!!!!b
; --Se llama a la funcion es_primo
  OSF  8  1 L5
  AND
; --Comprobar variable a
  SRF  0  6
  DRF
; --Comprobar variable b
  SRF  0  7
  DRF
  PLUS
; --Comprobar variable k
  SRF  0  3
  DRF
  EQ
  AND
  JMF L13
  STC 10
  WRT  0
<String_"Se mete en el if">
  STC 102
  STC 105
  STC 32
  STC 108
  STC 101
  STC 32
  STC 110
  STC 101
  STC 32
  STC 101
  STC 116
  STC 101
  STC 109
  STC 32
  STC 101
  STC 83
</String_"Se mete en el if">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
; --Comprobar variable a
  SRF  0  6
  DRF
; --Se va a anyadir el string del putline y se muestra a
  WRT  1
<String_"+">
; --Comprobar variable a
  SRF  0  6
  DRF
  STC 43
</String_"+">
; --Se va a anyadir el string del putline y se muestra a
  WRT  0
<String_"+">
; --Comprobar variable a
  SRF  0  6
  DRF
  STC 43
</String_"+">
; --Comprobar variable b
  SRF  0  7
  DRF
; --Se va a anyadir el string del putline y se muestra b
  WRT  1
<String_", ">
<String_"+">
; --Comprobar variable a
  SRF  0  6
  DRF
  STC 43
</String_"+">
; --Comprobar variable b
  SRF  0  7
  DRF
  STC 32
  STC 44
</String_", ">
; --Se va a anyadir el string del putline y se muestra b
  WRT  0
  WRT  0
; --Comprobar variable n
  SRF  0  5
; --Comprobar variable n
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
  JMP L14
L13:
</then>
L14:
</if_else>
; --Comprobar variable a
  SRF  0  6
; --Comprobar variable a
  SRF  0  6
  DRF
  STC  1
  PLUS
  ASG
; --Comprobar variable a
  SRF  0  6
  DRF
; --Comprobar variable k
  SRF  0  3
  DRF
  EQ
  JMF L15
; --Comprobar variable b
  SRF  0  7
; --Comprobar variable b
  SRF  0  7
  DRF
  STC  1
  PLUS
  ASG
; --Comprobar variable a
  SRF  0  6
; --Comprobar variable b
  SRF  0  7
  DRF
  ASG
  JMP L16
L15:
</then>
L16:
</if_else>
  JMP L11
L12:
  STC 10
  WRT  0
; --Comprobar variable n
  SRF  0  5
  DRF
; --Se va a anyadir el string del putline y se muestra n
  WRT  1
<String_" parejas de primos en total.">
; --Comprobar variable n
  SRF  0  5
  DRF
  STC 46
  STC 108
  STC 97
  STC 116
  STC 111
  STC 116
  STC 32
  STC 110
  STC 101
  STC 32
  STC 115
  STC 111
  STC 109
  STC 105
  STC 114
  STC 112
  STC 32
  STC 101
  STC 100
  STC 32
  STC 115
  STC 97
  STC 106
  STC 101
  STC 114
  STC 97
  STC 112
  STC 32
</String_" parejas de primos en total.">
; --Se va a anyadir el string del putline y se muestra n
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
; --Comprobar variable n
  SRF  0  5
  DRF
  STC  0
  GT
; --Se hace return 
  CSF
  CSF
</hay_un_par>
L0:
<if_else>
<then>
<Putline>
<Putline>
<Putline>
<Putline>
<Putline>
<Putline>
  STC 10
  WRT  0
<String_"Conjetura de Golbach: todo número par mayor que 2 puede escribirse como suma de dos números primos.">
  STC 46
  STC 115
  STC 111
  STC 109
  STC 105
  STC 114
  STC 112
  STC 32
  STC 115
  STC 111
  STC 114
  STC 101
  STC 109
  STC 250
  STC 110
  STC 32
  STC 115
  STC 111
  STC 100
  STC 32
  STC 101
  STC 100
  STC 32
  STC 97
  STC 109
  STC 117
  STC 115
  STC 32
  STC 111
  STC 109
  STC 111
  STC 99
  STC 32
  STC 101
  STC 115
  STC 114
  STC 105
  STC 98
  STC 105
  STC 114
  STC 99
  STC 115
  STC 101
  STC 32
  STC 101
  STC 100
  STC 101
  STC 117
  STC 112
  STC 32
  STC 50
  STC 32
  STC 101
  STC 117
  STC 113
  STC 32
  STC 114
  STC 111
  STC 121
  STC 97
  STC 109
  STC 32
  STC 114
  STC 97
  STC 112
  STC 32
  STC 111
  STC 114
  STC 101
  STC 109
  STC 250
  STC 110
  STC 32
  STC 111
  STC 100
  STC 111
  STC 116
  STC 32
  STC 58
  STC 104
  STC 99
  STC 97
  STC 98
  STC 108
  STC 111
  STC 71
  STC 32
  STC 101
  STC 100
  STC 32
  STC 97
  STC 114
  STC 117
  STC 116
  STC 101
  STC 106
  STC 110
  STC 111
  STC 67
</String_"Conjetura de Golbach: todo número par mayor que 2 puede escribirse como suma de dos números primos.">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
  STC 10
  WRT  0
<String_"https://es.wikipedia.org/wiki/Conjetura_de_Goldbach">
  STC 104
  STC 99
  STC 97
  STC 98
  STC 100
  STC 108
  STC 111
  STC 71
  STC 95
  STC 101
  STC 100
  STC 95
  STC 97
  STC 114
  STC 117
  STC 116
  STC 101
  STC 106
  STC 110
  STC 111
  STC 67
  STC 47
  STC 105
  STC 107
  STC 105
  STC 119
  STC 47
  STC 103
  STC 114
  STC 111
  STC 46
  STC 97
  STC 105
  STC 100
  STC 101
  STC 112
  STC 105
  STC 107
  STC 105
  STC 119
  STC 46
  STC 115
  STC 101
  STC 47
  STC 47
  STC 58
  STC 115
  STC 112
  STC 116
  STC 116
  STC 104
</String_"https://es.wikipedia.org/wiki/Conjetura_de_Goldbach">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
  STC 10
  WRT  0
</Putline>
  STC 10
  WRT  0
<String_"Este programa comprueba si es cierta hasta el número que le digas.">
  STC 46
  STC 115
  STC 97
  STC 103
  STC 105
  STC 100
  STC 32
  STC 101
  STC 108
  STC 32
  STC 101
  STC 117
  STC 113
  STC 32
  STC 111
  STC 114
  STC 101
  STC 109
  STC 250
  STC 110
  STC 32
  STC 108
  STC 101
  STC 32
  STC 97
  STC 116
  STC 115
  STC 97
  STC 104
  STC 32
  STC 97
  STC 116
  STC 114
  STC 101
  STC 105
  STC 99
  STC 32
  STC 115
  STC 101
  STC 32
  STC 105
  STC 115
  STC 32
  STC 97
  STC 98
  STC 101
  STC 117
  STC 114
  STC 112
  STC 109
  STC 111
  STC 99
  STC 32
  STC 97
  STC 109
  STC 97
  STC 114
  STC 103
  STC 111
  STC 114
  STC 112
  STC 32
  STC 101
  STC 116
  STC 115
  STC 69
</String_"Este programa comprueba si es cierta hasta el número que le digas.">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
  STC 10
  WRT  0
</Putline>
; --Comprobar variable n
  SRF  0  3
; --Se llama a la funcion pedir_entero
  OSF  5  0 L1
  ASG
; --Comprobar variable i
  SRF  0  4
  STC  4
  ASG
L17:
; --Comprobar variable i
  SRF  0  4
  DRF
; --Comprobar variable n
  SRF  0  3
  DRF
  LTE
  JMF L18
; --Comprobar variable i
; --Se anyade el parametro y es NONE
  SRF  0  4
  DRF
; --Se anyade el parametro !!!!!i
; --Se llama a la funcion hay_un_par
  OSF  5  0 L9
  NGB
  JMF L19
  STC 10
  WRT  0
<String_"L conjetura no se cumple para ">
  STC 32
  STC 97
  STC 114
  STC 97
  STC 112
  STC 32
  STC 101
  STC 108
  STC 112
  STC 109
  STC 117
  STC 99
  STC 32
  STC 101
  STC 115
  STC 32
  STC 111
  STC 110
  STC 32
  STC 97
  STC 114
  STC 117
  STC 116
  STC 101
  STC 106
  STC 110
  STC 111
  STC 99
  STC 32
  STC 76
</String_"L conjetura no se cumple para ">
; --Se va a anyadir el string del putline y se muestra 
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
<String_"L conjetura no se cumple para ">
  STC 32
  STC 97
  STC 114
  STC 97
  STC 112
  STC 32
  STC 101
  STC 108
  STC 112
  STC 109
  STC 117
  STC 99
  STC 32
  STC 101
  STC 115
  STC 32
  STC 111
  STC 110
  STC 32
  STC 97
  STC 114
  STC 117
  STC 116
  STC 101
  STC 106
  STC 110
  STC 111
  STC 99
  STC 32
  STC 76
</String_"L conjetura no se cumple para ">
; --Comprobar variable i
  SRF  0  4
  DRF
; --Se va a anyadir el string del putline y se muestra i
  WRT  1
<String_"! (Seguro que por error del compilador!)">
<String_"L conjetura no se cumple para ">
  STC 32
  STC 97
  STC 114
  STC 97
  STC 112
  STC 32
  STC 101
  STC 108
  STC 112
  STC 109
  STC 117
  STC 99
  STC 32
  STC 101
  STC 115
  STC 32
  STC 111
  STC 110
  STC 32
  STC 97
  STC 114
  STC 117
  STC 116
  STC 101
  STC 106
  STC 110
  STC 111
  STC 99
  STC 32
  STC 76
</String_"L conjetura no se cumple para ">
; --Comprobar variable i
  SRF  0  4
  DRF
  STC 41
  STC 33
  STC 114
  STC 111
  STC 100
  STC 97
  STC 108
  STC 105
  STC 112
  STC 109
  STC 111
  STC 99
  STC 32
  STC 108
  STC 101
  STC 100
  STC 32
  STC 114
  STC 111
  STC 114
  STC 114
  STC 101
  STC 32
  STC 114
  STC 111
  STC 112
  STC 32
  STC 101
  STC 117
  STC 113
  STC 32
  STC 111
  STC 114
  STC 117
  STC 103
  STC 101
  STC 83
  STC 40
  STC 32
  STC 33
</String_"! (Seguro que por error del compilador!)">
; --Se va a anyadir el string del putline y se muestra i
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
</Putline>
  JMP L20
L19:
</then>
L20:
</if_else>
; --Comprobar variable i
  SRF  0  4
; --Comprobar variable i
  SRF  0  4
  DRF
  STC  2
  PLUS
  ASG
  JMP L17
L18:
  LVP
</goldbach>

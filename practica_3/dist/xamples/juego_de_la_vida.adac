--------------------------------------------------------------------------
procedure juego_de_la_vida is
--------------------------------------------------------------------------

boolean colonia[80];
integer i, iteraciones, elementos;



--------------------------------------------------------------------------
function boolean vivira (ref boolean colonia[80]; val integer i) is
--------------------------------------------------------------------------
begin
    if i = 0 then
        return (false);
    else if i = elementos - 1 then
        return (false);
    else
        return (not colonia[i] and ((colonia[i - 1] and not colonia[i +
        1]) or (not colonia[i - 1] and colonia[i + 1])));
    end
    end
end


--------------------------------------------------------------------------
procedure siguientegeneracion (ref boolean colonia[80]) is
--------------------------------------------------------------------------
integer i;
boolean siguiente[80];

begin
    i := 0;
    while i < elementos do
        siguiente[i] := vivira(colonia,i);
        i := i + 1;
    end
    --asignar (colonia, siguiente);
end


--------------------------------------------------------------------------

--------------------------------------------------------------------------
begin
    put_line ("Implementación de la versión 1D del Juego de la Vida de Conway.");
    put_line ("https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life");
    put_line ("");
    elementos := 80;
    --inicializar (colonia);
    --mostrarcolonia (colonia);
    --i := 1;
    --iteraciones := 50;
    --while i <= iteraciones do
    --    siguientegeneracion (colonia);
     --   mostrarcolonia (colonia);
    --    i := i + 1;
    --end
end